parameters: 
  rustup_toolchain: stable
  components: ['clippy']
  # tools: ['cargo-suity']

steps:
  # Linux and macOS.
  - script: |
      set -e
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    env:
      RUSTUP_TOOLCHAIN: ${{parameters.rustup_toolchain}}
    displayName: "Install rust (*nix)"
    condition: not(eq(variables['Agent.OS'], 'Windows_NT'))

  # Windows.
  - script: |
      echo "Downloading Rustup for Windows"
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      echo "Installing rustup on %RUSTUP_TOOLCHAIN%"
      rustup-init.exe --default-host x86_64-pc-windows-msvc -y --default-toolchain %RUSTUP_TOOLCHAIN%
      set PATH=%PATH%;%USERPROFILE%\.cargo\bin
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
    env:
      RUSTUP_TOOLCHAIN: ${{ parameters.rustup_toolchain }}
    displayName: "Install rust for Windows"
    condition: eq(variables['Agent.OS'], 'Windows_NT')

  # Install additional components:
  - ${{ each component in parameters.components }}:
    - script: rustup component add ${{ component }}
      displayName: "Adding commponent ${{ component }}"

  # Set correct rustup_toolchain
  - bash: |
      rustup default $RUSTUP_TOOLCHAIN
      rustup update $RUSTUP_TOOLCHAIN
    env:
      RUSTUP_TOOLCHAIN: ${{parameters.rustup_toolchain}}
    displayName: "Set correct Rust version"
  

  # All platforms.
  - script: |
      set -e
      echo "Rust up version"
      rustup -V
      echo "rustup installed commponents list"
      rustup component list --installed
      echo "rustup show:"
      rustup show
      echo "rustc -Vv"
      rustc -Vv
      echo "cargo -V"
      cargo -V
    displayName: Query rustup, rust and cargo versions